
/*

		В классе Card (см. фрагмент программы 3.2) для определения цвета карты по ее
	масти используется целочисленное деление. Опишите достоинства и недостатки
	этого приема. Перепишите соответствующий метод так, чтобы убрать зависимость
	от конкретных значений, приписанных мастям карт.

*/

/*

    Достоинства использования целочисленного деления для определения цвета карты по ее масти:

    Простота и наглядность кода: операция целочисленного деления может быть легко понята и интерпретирована разработчиками.
    Эффективность: целочисленное деление является относительно быстрой операцией, что может быть важно для производительности программы.
    Недостатки использования целочисленного деления:

    Жесткая привязка к конкретным значениям мастей карт: при изменении порядка или значений мастей, необходимо будет вносить изменения в код, что может быть неудобно и привести к ошибкам.
    Неясность: использование целочисленного деления для определения цвета карт может быть запутанным и неочевидным для других разработчиков, особенно если они не знакомы с этим подходом.
    Чтобы убрать зависимость от конкретных значений, приписанных мастям карт, можно переписать метод GetColor в классе Card следующим образом:

*/

// Было
Color Card::GetColor()
{
    return static_cast<Color>(suit % 2); // Очень плохой способ реализации
}

// Стало
Color Card::GetColor()
{
    if (suit == Suit::Heart || suit == Suit::Diamond) {
        return Color::Red;
    }
    else {
        return Color::Black;
    }
}

/*
    Этот подход делает код более читаемым, явным и устойчивым к изменениям в значениях мастей карт, 
    так как цвет карты теперь определяется исходя из конкретной масти, а не из результатов целочисленного деления.
*/